<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbMat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAPMAAACWCAYAAAALz77WAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAB4xSURBVHhe7d0DtAXX9QbwlKlt27bb1G1qI2XSNrVt20xq
        GylSp7Zt2zbmv37zf/v23MnFXL53z9vfWmc93LmaOd85e38bs0eTSCSqQJI5kagESeZEohIkmROJSpBk
        TiQqQZI5kagESeZEohIkmROJSpBkTiQqQZI5kagESeZEohIkmROJSpBkTiQqQZI5kagESeZEohIkmROJ
        SpBkTiQqQZI5kagESeZEohIkmROJSpBkTiQqQZI5kagESeZEohIkmROJSpBkTiQqQZI5kagESeZEohIk
        mROJSpBkTsyF3/3ud83HPvax5rnPfW7z9Kc/vXnnO9/Z/PjHP27+9a9/bR2RWDeSzImZ8aMf/ah52MMe
        1pzrXOdqTnSiEzXHP/7xm9Od7nTN9a53veaggw5q/vrXv24dmVgnksyJmfDb3/62efSjH90c61jHavbY
        Y49DjTOe8YzNy172subvf//71jMS60KSOdEb//3vf9ud9wxnOMOAvIc97GGbPffcc4jQpzjFKZrXve51
        zd/+9retZybWgSRzojf+8Ic/NLe61a2awx3ucC1pj3SkIzV77713c4973KM597nP3RI7CH3Zy162+ehH
        P7r1zMQ6kGROjMU///nP5tOf/nRz4IEHNh/5yEeaT33qU82FL3zhAWHPcY5zNIccckjrI7/tbW9rzne+
        8w0eQ/S73OUurVCWWA+SzImx+N73vtdc5SpXaY561KM2l7nMZZrb3va2zUlOcpIBYffbb7/m5z//eXss
        E/wlL3lJc7KTnWzw+JnPfObmQx/6UPt4YvVIMifG4uMf/3hznOMcpyXm4Q9/+OZ4xztec5SjHKX9+whH
        OELz7Gc/e8gv/tWvftXc9a53bY54xCO2xzj2vve9b/OPf/xj64jEKpFkTozFl7/85eac5zznYKc9zGEO
        M/CLEZUY9p///Gfr6Kb9/cMf/nBz+tOffvAcvrP4c2L1SDInxuJPf/pTK26FWo3MQdJjHOMYzXve857W
        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
</value>
  </data>
</root>